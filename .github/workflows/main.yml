# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.7 
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      

      # Runs a set of commands using the runners shell
      
      - name: Compile
        run: |
          echo Compiling source files....
          mkdir bin
          ls lib
          find -name "*.java" > sources.txt
          javac -d bin -cp lib/gnujaxp.jar:lib/jcommon-1.0.0-rc1-cvs.jar:lib/jcommon-1.0.5.jar:lib/junit.jar:lib/mockito-all-2.0.2-beta.jar:lib/servlet.jar @sources.txt
      - name: Running tests
        run: |
          echo Starting the tests.....
          java -cp bin:lib/gnujaxp.jar:lib/jcommon-1.0.0-rc1-cvs.jar:lib/jcommon-1.0.5.jar:lib/junit.jar:lib/mockito-all-2.0.2-beta.jar:lib/servlet.jar org.junit.runner.JUnitCore org.jfree.data.RangeTest
          java -cp bin:lib/gnujaxp.jar:lib/jcommon-1.0.0-rc1-cvs.jar:lib/jcommon-1.0.5.jar:lib/junit.jar:lib/mockito-all-2.0.2-beta.jar:lib/servlet.jar org.junit.runner.JUnitCore org.jfree.data.DataUtilitiesTest
          
        
